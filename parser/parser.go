// Code generated by goyacc - DO NOT EDIT.


// Copyright 2013 The ql Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSES/QL-LICENSE file.

// Copyright 2022 zGraph Authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Initial yacc source generated by ebnf2y[1]
// at 2013-10-04 23:10:47.861401015 +0200 CEST
//
//  $ ebnf2y -o ql.y -oe ql.ebnf -start StatementList -pkg ql -p _
//
//   [1]: http://github.com/cznic/ebnf2y

// The parser implements the PGQL specification
//
// - https://pgql-lang.org/spec/1.5/
//

package parser

import __yyfmt__ "fmt"


import (
	"strings"

	"github.com/vescale/zgraph/parser/ast"
)


type yySymType struct {
	yys    int
	offset int // offset
	item interface{}
	ident string
	expr ast.ExprNode
	statement ast.StmtNode
}

type yyXError struct {
	state, xsym int
}

const (
	yyDefault             = 57530
	yyEofCode             = 57344
	abs                   = 57487
	all                   = 57448
	allProp               = 57518
	and                   = 57425
	andand                = 57352
	andnot                = 57496
	any                   = 57449
	array_agg             = 57462
	as                    = 57354
	asc                   = 57355
	assignmentEq          = 57497
	avg                   = 57463
	bLeftArrow            = 57514
	bRightArrow           = 57515
	begin                 = 57434
	between               = 57426
	bigIntType            = 57356
	booleanType           = 57437
	bracketDash           = 57513
	by                    = 57357
	case                  = 57429
	cast                  = 57473
	ceil                  = 57488
	ceiling               = 57489
	charType              = 57359
	character             = 57358
	cheapest              = 57451
	comment               = 57436
	commit                = 57435
	cost                  = 57453
	count                 = 57464
	create                = 57360
	currentTs             = 57361
	dashBracket           = 57512
	dashSlash             = 57510
	dateType              = 57440
	day                   = 57441
	decLit                = 57494
	decimalType           = 57362
	defaultKwd            = 57363
	deleteKwd             = 57364
	desc                  = 57365
	destination           = 57366
	distinct              = 57469
	div                   = 57526
	doubleAtIdentifier    = 57350
	doubleType            = 57367
	drop                  = 57368
	edge                  = 57369
	element_number        = 57490
	else                  = 57433
	empty                 = 57520
	end                   = 57430
	eq                    = 57498
	yyErrCode             = 57345
	exists                = 57370
	explain               = 57438
	extract               = 57470
	falseKwd              = 57371
	floatType             = 57372
	floor                 = 57491
	for                   = 57461
	from                  = 57373
	ge                    = 57499
	graph                 = 57447
	group                 = 57374
	has_label             = 57492
	having                = 57375
	higherThanComma       = 57529
	higherThanParenthese  = 57522
	hour                  = 57456
	id                    = 57493
	identifier            = 57346
	ifKwd                 = 57376
	in                    = 57478
	in_degree             = 57482
	index                 = 57377
	insert                = 57378
	int1Type              = 57379
	int2Type              = 57380
	int3Type              = 57381
	int4Type              = 57382
	int8Type              = 57383
	intLit                = 57495
	intType               = 57386
	integerType           = 57384
	interval              = 57455
	into                  = 57385
	invalid               = 57351
	is                    = 57387
	java_regexp_like      = 57483
	jss                   = 57501
	juss                  = 57502
	key                   = 57388
	label                 = 57484
	labels                = 57427
	le                    = 57500
	leftArrow             = 57509
	like                  = 57525
	limit                 = 57389
	listagg               = 57465
	localTime             = 57390
	localTs               = 57391
	long                  = 57474
	longtextType          = 57392
	lower                 = 57480
	lowerThanEq           = 57524
	lowerThanOn           = 57523
	lsh                   = 57503
	match                 = 57393
	match_number          = 57485
	max                   = 57466
	mediumIntType         = 57394
	mediumtextType        = 57395
	min                   = 57467
	minute                = 57457
	mod                   = 57527
	month                 = 57458
	neg                   = 57528
	neq                   = 57504
	neqSynonym            = 57505
	not                   = 57396
	not2                  = 57519
	null                  = 57397
	nulleq                = 57506
	numericType           = 57398
	offset                = 57445
	on                    = 57399
	or                    = 57424
	order                 = 57400
	out_degree            = 57486
	paramMarker           = 57507
	path                  = 57454
	pipes                 = 57353
	pipesAsOr             = 57446
	precisionType         = 57401
	prefix                = 57479
	primary               = 57402
	properties            = 57428
	realType              = 57403
	references            = 57404
	rollback              = 57444
	rsh                   = 57508
	sLeftArrow            = 57516
	sRightArrow           = 57517
	second                = 57459
	selectKwd             = 57405
	set                   = 57406
	shortest              = 57450
	singleAtIdentifier    = 57349
	slashDash             = 57511
	smallIntType          = 57407
	source                = 57408
	string                = 57475
	stringLit             = 57348
	stringLiteral         = 57521
	substring             = 57460
	sum                   = 57468
	then                  = 57431
	timeType              = 57443
	timestampType         = 57442
	timezone_hour         = 57471
	timezone_minute       = 57472
	tinyIntType           = 57409
	tinytextType          = 57410
	top                   = 57452
	trueKwd               = 57411
	underscoreCS          = 57347
	unique                = 57412
	unsigned              = 57413
	update                = 57414
	uppper                = 57481
	use                   = 57415
	values                = 57416
	varcharType           = 57418
	varcharacter          = 57417
	varying               = 57419
	vertex                = 57420
	when                  = 57432
	where                 = 57421
	with                  = 57476
	xor                   = 57422
	yearType              = 57439
	zerofill              = 57423
	zone                  = 57477

	yyMaxDepth = 200
	yyTabOfs   = -338
)

var (

	yyPrec = map[int]int{
		empty: 0,
		stringLiteral: 1,
		insert: 2,
		'(': 3,
		')': 4,
		higherThanParenthese: 5,
		lowerThanOn: 6,
		on: 7,
		assignmentEq: 8,
		pipes: 9,
		or: 9,
		pipesAsOr: 9,
		xor: 10,
		andand: 11,
		and: 11,
		between: 12,
		lowerThanEq: 13,
		eq: 14,
		ge: 14,
		le: 14,
		neq: 14,
		neqSynonym: 14,
		'>': 14,
		'<': 14,
		is: 14,
		like: 14,
		in: 14,
		'|': 15,
		'&': 16,
		rsh: 17,
		lsh: 17,
		'-': 18,
		'+': 18,
		'*': 19,
		'/': 19,
		'%': 19,
		div: 19,
		mod: 19,
		'^': 20,
		'~': 21,
		neg: 21,
		not: 22,
		',': 23,
		higherThanComma: 24,
		}

	yyXLAT = map[int]int{
		    41:   0, // ')' (231x)
		 57344:   1, // $end (221x)
		    59:   2, // ';' (220x)
		 57445:   3, // offset (210x)
		 57434:   4, // begin (208x)
		 57435:   5, // commit (208x)
		 57441:   6, // day (208x)
		 57438:   7, // explain (208x)
		 57447:   8, // graph (208x)
		 57444:   9, // rollback (208x)
		 57439:  10, // yearType (208x)
		 57437:  11, // booleanType (207x)
		 57436:  12, // comment (206x)
		 57346:  13, // identifier (206x)
		    44:  14, // ',' (200x)
		    45:  15, // '-' (200x)
		 57396:  16, // not (193x)
		 57348:  17, // stringLit (173x)
		 57389:  18, // limit (166x)
		 57400:  19, // order (161x)
		 57375:  20, // having (156x)
		 57373:  21, // from (154x)
		    42:  22, // '*' (147x)
		    40:  23, // '(' (146x)
		    43:  24, // '+' (145x)
		 57387:  25, // is (139x)
		 57374:  26, // group (138x)
		 57425:  27, // and (133x)
		 57478:  28, // in (132x)
		    37:  29, // '%' (131x)
		    47:  30, // '/' (131x)
		    60:  31, // '<' (131x)
		    62:  32, // '>' (131x)
		 57352:  33, // andand (131x)
		 57498:  34, // eq (131x)
		 57499:  35, // ge (131x)
		 57500:  36, // le (131x)
		 57505:  37, // neqSynonym (131x)
		 57424:  38, // or (131x)
		 57353:  39, // pipes (131x)
		 57446:  40, // pipesAsOr (131x)
		 57405:  41, // selectKwd (131x)
		 57422:  42, // xor (131x)
		 57454:  43, // path (129x)
		 57364:  44, // deleteKwd (127x)
		 57378:  45, // insert (127x)
		 57414:  46, // update (127x)
		 57453:  47, // cost (116x)
		 57355:  48, // asc (112x)
		 57365:  49, // desc (112x)
		 57430:  50, // end (112x)
		 57432:  51, // when (111x)
		 57433:  52, // else (109x)
		 57354:  53, // as (108x)
		 57461:  54, // for (106x)
		 57431:  55, // then (105x)
		 57584:  56, // Identifier (80x)
		 57654:  57, // UnreservedKeywords (80x)
		 57427:  58, // labels (77x)
		 57495:  59, // intLit (67x)
		 57443:  60, // timeType (63x)
		    63:  61, // '?' (62x)
		 57370:  62, // exists (62x)
		 57440:  63, // dateType (61x)
		 57442:  64, // timestampType (61x)
		 57487:  65, // abs (60x)
		 57462:  66, // array_agg (60x)
		 57463:  67, // avg (60x)
		 57429:  68, // case (60x)
		 57473:  69, // cast (60x)
		 57488:  70, // ceil (60x)
		 57489:  71, // ceiling (60x)
		 57464:  72, // count (60x)
		 57494:  73, // decLit (60x)
		 57490:  74, // element_number (60x)
		 57470:  75, // extract (60x)
		 57371:  76, // falseKwd (60x)
		 57491:  77, // floor (60x)
		 57492:  78, // has_label (60x)
		 57493:  79, // id (60x)
		 57482:  80, // in_degree (60x)
		 57455:  81, // interval (60x)
		 57483:  82, // java_regexp_like (60x)
		 57484:  83, // label (60x)
		 57465:  84, // listagg (60x)
		 57480:  85, // lower (60x)
		 57485:  86, // match_number (60x)
		 57466:  87, // max (60x)
		 57467:  88, // min (60x)
		 57486:  89, // out_degree (60x)
		 57460:  90, // substring (60x)
		 57468:  91, // sum (60x)
		 57411:  92, // trueKwd (60x)
		 57481:  93, // uppper (60x)
		 57660:  94, // VariableName (54x)
		 57662:  95, // VariableReference (54x)
		 57421:  96, // where (51x)
		 57627:  97, // PropertyAccess (50x)
		 57537:  98, // BindVariable (49x)
		 57648:  99, // StringLiteral (49x)
		 57649: 100, // SubSelect (48x)
		 57531: 101, // Aggregation (47x)
		 57534: 102, // ArithmeticExpression (47x)
		 57538: 103, // BooleanLiteral (47x)
		 57539: 104, // BracketedValueExpression (47x)
		 57542: 105, // CaseExpression (47x)
		 57543: 106, // CastSpecification (47x)
		 57544: 107, // CharacterSubstring (47x)
		 57552: 108, // DateLiteral (47x)
		 57562: 109, // ExistsPredicate (47x)
		 57566: 110, // ExtractFunction (47x)
		 57572: 111, // FunctionInvocation (47x)
		 57573: 112, // FunctionName (47x)
		 57587: 113, // InPredicate (47x)
		 57592: 114, // IntervalLiteral (47x)
		 57595: 115, // IsNotNullPredicate (47x)
		 57596: 116, // IsNullPredicate (47x)
		 57610: 117, // Literal (47x)
		 57611: 118, // LogicalExpression (47x)
		 57614: 119, // NotInPredicate (47x)
		 57615: 120, // NumericLiteral (47x)
		 57634: 121, // RelationalExpression (47x)
		 57637: 122, // ScalarSubquery (47x)
		 57638: 123, // SearchedCase (47x)
		 57642: 124, // SimpleCase (47x)
		 57647: 125, // StringConcat (47x)
		 57652: 126, // TimeLiteral (47x)
		 57653: 127, // TimestampLiteral (47x)
		 57657: 128, // ValueExpression (47x)
		 57671: 129, // logAnd (43x)
		 57672: 130, // logOr (43x)
		 57399: 131, // on (33x)
		 57507: 132, // paramMarker (29x)
		 57511: 133, // slashDash (28x)
		   123: 134, // '{' (26x)
		 57517: 135, // sRightArrow (26x)
		 57513: 136, // bracketDash (24x)
		 57515: 137, // bRightArrow (22x)
		    58: 138, // ':' (20x)
		 57369: 139, // edge (20x)
		 57428: 140, // properties (20x)
		 57420: 141, // vertex (20x)
		    46: 142, // '.' (18x)
		 57665: 143, // VertexPattern (17x)
		    61: 144, // '=' (16x)
		   124: 145, // '|' (16x)
		 57426: 146, // between (15x)
		 57406: 147, // set (15x)
		 57518: 148, // allProp (13x)
		 57514: 149, // bLeftArrow (9x)
		 57512: 150, // dashBracket (9x)
		 57501: 151, // jss (9x)
		 57509: 152, // leftArrow (9x)
		 57469: 153, // distinct (8x)
		 57555: 154, // DistinctOpt (8x)
		 57578: 155, // GraphName (8x)
		 57659: 156, // VariableLengthPathPattern (8x)
		 57606: 157, // LengthNum (7x)
		 57620: 158, // PathPatternMacro (6x)
		 57661: 159, // VariableNameOpt (6x)
		 57670: 160, // WhereClauseOpt (6x)
		   125: 161, // '}' (5x)
		 57510: 162, // dashSlash (5x)
		 57563: 163, // ExpAsVar (5x)
		 57621: 164, // PathPatternMacroList (5x)
		 57622: 165, // PathPatternMacroOpt (5x)
		 57641: 166, // SelectStmt (5x)
		 57516: 167, // sLeftArrow (5x)
		 57448: 168, // all (4x)
		 57449: 169, // any (4x)
		 57451: 170, // cheapest (4x)
		 57571: 171, // FromClause (4x)
		 57582: 172, // GroupByClauseOpt (4x)
		 57583: 173, // HavingClauseOpt (4x)
		 57376: 174, // ifKwd (4x)
		 57377: 175, // index (4x)
		 57607: 176, // LimitClauseOpt (4x)
		 57617: 177, // OrderByClauseOpt (4x)
		 57618: 178, // PathPattern (4x)
		 57623: 179, // PatternQuantifier (4x)
		 57624: 180, // PatternQuantifierOpt (4x)
		 57450: 181, // shortest (4x)
		 57643: 182, // SimplePathPattern (4x)
		 57452: 183, // top (4x)
		 57664: 184, // VariableSpec (4x)
		 57669: 185, // WhenClause (4x)
		 57540: 186, // ByItem (3x)
		 57545: 187, // ColonOrIsKeyword (3x)
		 57558: 188, // EdgePattern (3x)
		 57574: 189, // GraphElementInsertion (3x)
		 57601: 190, // LabelPredicate (3x)
		 57608: 191, // LimitOption (3x)
		 57628: 192, // PropertyAssignment (3x)
		 57630: 193, // PropertyName (3x)
		 57536: 194, // BeginStmt (2x)
		 57357: 195, // by (2x)
		 57541: 196, // ByList (2x)
		 57546: 197, // CommitStmt (2x)
		 57360: 198, // create (2x)
		 57549: 199, // CreateGraphStmt (2x)
		 57550: 200, // CreateIndexStmt (2x)
		 57554: 201, // DeleteStmt (2x)
		 57368: 202, // drop (2x)
		 57556: 203, // DropGraphStmt (2x)
		 57557: 204, // DropIndexStmt (2x)
		 57559: 205, // ElseClauseOpt (2x)
		 57560: 206, // EmptyStmt (2x)
		 57564: 207, // ExplainStmt (2x)
		 57567: 208, // Field (2x)
		 57575: 209, // GraphElementInsertionList (2x)
		 57576: 210, // GraphElementUpdate (2x)
		 57456: 211, // hour (2x)
		 57585: 212, // IfExists (2x)
		 57586: 213, // IfNotExists (2x)
		 57591: 214, // InsertStmt (2x)
		 57385: 215, // into (2x)
		 57593: 216, // IntoClause (2x)
		 57594: 217, // IntoClauseOpt (2x)
		 57588: 218, // InValueList (2x)
		 57599: 219, // LabelName (2x)
		 57605: 220, // LabelsAndProperties (2x)
		 57603: 221, // LabelSpecification (2x)
		 57604: 222, // LabelSpecificationOpt (2x)
		 57393: 223, // match (2x)
		 57612: 224, // MatchClause (2x)
		 57457: 225, // minute (2x)
		 57458: 226, // month (2x)
		 57397: 227, // null (2x)
		 57629: 228, // PropertyAssignmentList (2x)
		 57635: 229, // RollbackStmt (2x)
		 57459: 230, // second (2x)
		 57639: 231, // SelectClause (2x)
		 57645: 232, // Statement (2x)
		 57655: 233, // UpdateStmt (2x)
		 57415: 234, // use (2x)
		 57656: 235, // UseStmt (2x)
		 57666: 236, // VertexPatternOpt (2x)
		 57667: 237, // VertexReference (2x)
		 57668: 238, // WhenCaluseList (2x)
		 57476: 239, // with (2x)
		 57477: 240, // zone (2x)
		 57532: 241, // AllPropertiesPrefixOpt (1x)
		 57533: 242, // ArgumentList (1x)
		 57547: 243, // CostClause (1x)
		 57548: 244, // CostClauseOpt (1x)
		 57551: 245, // DataType (1x)
		 57553: 246, // DateTimeField (1x)
		 57367: 247, // doubleType (1x)
		 57561: 248, // Entry (1x)
		 57565: 249, // ExtractField (1x)
		 57568: 250, // FieldAsName (1x)
		 57569: 251, // FieldAsNameOpt (1x)
		 57372: 252, // floatType (1x)
		 57570: 253, // ForStringLengthOpt (1x)
		 57577: 254, // GraphElementUpdateList (1x)
		 57579: 255, // GraphOnClause (1x)
		 57580: 256, // GraphOnClauseOpt (1x)
		 57581: 257, // GraphPattern (1x)
		 57589: 258, // IndexKeyTypeOpt (1x)
		 57384: 259, // integerType (1x)
		 57386: 260, // intType (1x)
		 57598: 261, // LabelList (1x)
		 57600: 262, // LabelNameList (1x)
		 57602: 263, // LabelPredicateOpt (1x)
		 57609: 264, // ListaggSeparatorOpt (1x)
		 57474: 265, // long (1x)
		 57613: 266, // MatchClauseList (1x)
		 57616: 267, // Order (1x)
		 57619: 268, // PathPatternList (1x)
		 57479: 269, // prefix (1x)
		 57625: 270, // PropertiesSpecification (1x)
		 57626: 271, // PropertiesSpecificationOpt (1x)
		 57631: 272, // PropertyNameList (1x)
		 57632: 273, // QuantifiedPathExpr (1x)
		 57633: 274, // ReachabilityPathExpr (1x)
		 57636: 275, // RowsPerMatchOpt (1x)
		 57640: 276, // SelectElementList (1x)
		 57644: 277, // StartPosition (1x)
		 57646: 278, // StatementList (1x)
		 57475: 279, // string (1x)
		 57471: 280, // timezone_hour (1x)
		 57472: 281, // timezone_minute (1x)
		 57412: 282, // unique (1x)
		 57658: 283, // ValueExpressionList (1x)
		 57663: 284, // VariableReferenceList (1x)
		 57530: 285, // $default (0x)
		    38: 286, // '&' (0x)
		    94: 287, // '^' (0x)
		   126: 288, // '~' (0x)
		 57496: 289, // andnot (0x)
		 57535: 290, // Assignment (0x)
		 57497: 291, // assignmentEq (0x)
		 57356: 292, // bigIntType (0x)
		 57358: 293, // character (0x)
		 57359: 294, // charType (0x)
		 57361: 295, // currentTs (0x)
		 57362: 296, // decimalType (0x)
		 57363: 297, // defaultKwd (0x)
		 57366: 298, // destination (0x)
		 57526: 299, // div (0x)
		 57350: 300, // doubleAtIdentifier (0x)
		 57520: 301, // empty (0x)
		 57345: 302, // error (0x)
		 57529: 303, // higherThanComma (0x)
		 57522: 304, // higherThanParenthese (0x)
		 57590: 305, // IndexName (0x)
		 57379: 306, // int1Type (0x)
		 57380: 307, // int2Type (0x)
		 57381: 308, // int3Type (0x)
		 57382: 309, // int4Type (0x)
		 57383: 310, // int8Type (0x)
		 57351: 311, // invalid (0x)
		 57502: 312, // juss (0x)
		 57388: 313, // key (0x)
		 57597: 314, // Label (0x)
		 57525: 315, // like (0x)
		 57390: 316, // localTime (0x)
		 57391: 317, // localTs (0x)
		 57392: 318, // longtextType (0x)
		 57524: 319, // lowerThanEq (0x)
		 57523: 320, // lowerThanOn (0x)
		 57503: 321, // lsh (0x)
		 57394: 322, // mediumIntType (0x)
		 57395: 323, // mediumtextType (0x)
		 57527: 324, // mod (0x)
		 57528: 325, // neg (0x)
		 57504: 326, // neq (0x)
		 57519: 327, // not2 (0x)
		 57506: 328, // nulleq (0x)
		 57398: 329, // numericType (0x)
		 57401: 330, // precisionType (0x)
		 57402: 331, // primary (0x)
		 57403: 332, // realType (0x)
		 57404: 333, // references (0x)
		 57508: 334, // rsh (0x)
		 57349: 335, // singleAtIdentifier (0x)
		 57407: 336, // smallIntType (0x)
		 57408: 337, // source (0x)
		 57521: 338, // stringLiteral (0x)
		 57650: 339, // TableAsName (0x)
		 57651: 340, // TableAsNameOpt (0x)
		 57409: 341, // tinyIntType (0x)
		 57410: 342, // tinytextType (0x)
		 57347: 343, // underscoreCS (0x)
		 57413: 344, // unsigned (0x)
		 57416: 345, // values (0x)
		 57417: 346, // varcharacter (0x)
		 57418: 347, // varcharType (0x)
		 57419: 348, // varying (0x)
		 57423: 349, // zerofill (0x)
	}

	yySymNames = []string{
		"')'",
		"$end",
		"';'",
		"offset",
		"begin",
		"commit",
		"day",
		"explain",
		"graph",
		"rollback",
		"yearType",
		"booleanType",
		"comment",
		"identifier",
		"','",
		"'-'",
		"not",
		"stringLit",
		"limit",
		"order",
		"having",
		"from",
		"'*'",
		"'('",
		"'+'",
		"is",
		"group",
		"and",
		"in",
		"'%'",
		"'/'",
		"'<'",
		"'>'",
		"andand",
		"eq",
		"ge",
		"le",
		"neqSynonym",
		"or",
		"pipes",
		"pipesAsOr",
		"selectKwd",
		"xor",
		"path",
		"deleteKwd",
		"insert",
		"update",
		"cost",
		"asc",
		"desc",
		"end",
		"when",
		"else",
		"as",
		"for",
		"then",
		"Identifier",
		"UnreservedKeywords",
		"labels",
		"intLit",
		"timeType",
		"'?'",
		"exists",
		"dateType",
		"timestampType",
		"abs",
		"array_agg",
		"avg",
		"case",
		"cast",
		"ceil",
		"ceiling",
		"count",
		"decLit",
		"element_number",
		"extract",
		"falseKwd",
		"floor",
		"has_label",
		"id",
		"in_degree",
		"interval",
		"java_regexp_like",
		"label",
		"listagg",
		"lower",
		"match_number",
		"max",
		"min",
		"out_degree",
		"substring",
		"sum",
		"trueKwd",
		"uppper",
		"VariableName",
		"VariableReference",
		"where",
		"PropertyAccess",
		"BindVariable",
		"StringLiteral",
		"SubSelect",
		"Aggregation",
		"ArithmeticExpression",
		"BooleanLiteral",
		"BracketedValueExpression",
		"CaseExpression",
		"CastSpecification",
		"CharacterSubstring",
		"DateLiteral",
		"ExistsPredicate",
		"ExtractFunction",
		"FunctionInvocation",
		"FunctionName",
		"InPredicate",
		"IntervalLiteral",
		"IsNotNullPredicate",
		"IsNullPredicate",
		"Literal",
		"LogicalExpression",
		"NotInPredicate",
		"NumericLiteral",
		"RelationalExpression",
		"ScalarSubquery",
		"SearchedCase",
		"SimpleCase",
		"StringConcat",
		"TimeLiteral",
		"TimestampLiteral",
		"ValueExpression",
		"logAnd",
		"logOr",
		"on",
		"paramMarker",
		"slashDash",
		"'{'",
		"sRightArrow",
		"bracketDash",
		"bRightArrow",
		"':'",
		"edge",
		"properties",
		"vertex",
		"'.'",
		"VertexPattern",
		"'='",
		"'|'",
		"between",
		"set",
		"allProp",
		"bLeftArrow",
		"dashBracket",
		"jss",
		"leftArrow",
		"distinct",
		"DistinctOpt",
		"GraphName",
		"VariableLengthPathPattern",
		"LengthNum",
		"PathPatternMacro",
		"VariableNameOpt",
		"WhereClauseOpt",
		"'}'",
		"dashSlash",
		"ExpAsVar",
		"PathPatternMacroList",
		"PathPatternMacroOpt",
		"SelectStmt",
		"sLeftArrow",
		"all",
		"any",
		"cheapest",
		"FromClause",
		"GroupByClauseOpt",
		"HavingClauseOpt",
		"ifKwd",
		"index",
		"LimitClauseOpt",
		"OrderByClauseOpt",
		"PathPattern",
		"PatternQuantifier",
		"PatternQuantifierOpt",
		"shortest",
		"SimplePathPattern",
		"top",
		"VariableSpec",
		"WhenClause",
		"ByItem",
		"ColonOrIsKeyword",
		"EdgePattern",
		"GraphElementInsertion",
		"LabelPredicate",
		"LimitOption",
		"PropertyAssignment",
		"PropertyName",
		"BeginStmt",
		"by",
		"ByList",
		"CommitStmt",
		"create",
		"CreateGraphStmt",
		"CreateIndexStmt",
		"DeleteStmt",
		"drop",
		"DropGraphStmt",
		"DropIndexStmt",
		"ElseClauseOpt",
		"EmptyStmt",
		"ExplainStmt",
		"Field",
		"GraphElementInsertionList",
		"GraphElementUpdate",
		"hour",
		"IfExists",
		"IfNotExists",
		"InsertStmt",
		"into",
		"IntoClause",
		"IntoClauseOpt",
		"InValueList",
		"LabelName",
		"LabelsAndProperties",
		"LabelSpecification",
		"LabelSpecificationOpt",
		"match",
		"MatchClause",
		"minute",
		"month",
		"null",
		"PropertyAssignmentList",
		"RollbackStmt",
		"second",
		"SelectClause",
		"Statement",
		"UpdateStmt",
		"use",
		"UseStmt",
		"VertexPatternOpt",
		"VertexReference",
		"WhenCaluseList",
		"with",
		"zone",
		"AllPropertiesPrefixOpt",
		"ArgumentList",
		"CostClause",
		"CostClauseOpt",
		"DataType",
		"DateTimeField",
		"doubleType",
		"Entry",
		"ExtractField",
		"FieldAsName",
		"FieldAsNameOpt",
		"floatType",
		"ForStringLengthOpt",
		"GraphElementUpdateList",
		"GraphOnClause",
		"GraphOnClauseOpt",
		"GraphPattern",
		"IndexKeyTypeOpt",
		"integerType",
		"intType",
		"LabelList",
		"LabelNameList",
		"LabelPredicateOpt",
		"ListaggSeparatorOpt",
		"long",
		"MatchClauseList",
		"Order",
		"PathPatternList",
		"prefix",
		"PropertiesSpecification",
		"PropertiesSpecificationOpt",
		"PropertyNameList",
		"QuantifiedPathExpr",
		"ReachabilityPathExpr",
		"RowsPerMatchOpt",
		"SelectElementList",
		"StartPosition",
		"StatementList",
		"string",
		"timezone_hour",
		"timezone_minute",
		"unique",
		"ValueExpressionList",
		"VariableReferenceList",
		"$default",
		"'&'",
		"'^'",
		"'~'",
		"andnot",
		"Assignment",
		"assignmentEq",
		"bigIntType",
		"character",
		"charType",
		"currentTs",
		"decimalType",
		"defaultKwd",
		"destination",
		"div",
		"doubleAtIdentifier",
		"empty",
		"error",
		"higherThanComma",
		"higherThanParenthese",
		"IndexName",
		"int1Type",
		"int2Type",
		"int3Type",
		"int4Type",
		"int8Type",
		"invalid",
		"juss",
		"key",
		"Label",
		"like",
		"localTime",
		"localTs",
		"longtextType",
		"lowerThanEq",
		"lowerThanOn",
		"lsh",
		"mediumIntType",
		"mediumtextType",
		"mod",
		"neg",
		"neq",
		"not2",
		"nulleq",
		"numericType",
		"precisionType",
		"primary",
		"realType",
		"references",
		"rsh",
		"singleAtIdentifier",
		"smallIntType",
		"source",
		"stringLiteral",
		"TableAsName",
		"TableAsNameOpt",
		"tinyIntType",
		"tinytextType",
		"underscoreCS",
		"unsigned",
		"values",
		"varcharacter",
		"varcharType",
		"varying",
		"zerofill",
	}

	yyTokenLiteralStrings = map[int]string{
		57445: "OFFSET",
		57434: "BEGIN",
		57435: "COMMIT",
		57441: "DAY",
		57438: "EXPLAIN",
		57447: "GRAPH",
		57444: "ROLLBACK",
		57439: "YEAR",
		57437: "BOOLEAN",
		57436: "COMMENT",
		57346: "identifier",
		57396: "NOT",
		57348: "string literal",
		57389: "LIMIT",
		57400: "ORDER",
		57375: "HAVING",
		57373: "FROM",
		57387: "IS",
		57374: "GROUP",
		57425: "AND",
		57478: "IN",
		57352: "&&",
		57498: "=",
		57499: ">=",
		57500: "<=",
		57505: "<>",
		57424: "OR",
		57353: "||",
		57405: "SELECT",
		57422: "XOR",
		57454: "PATH",
		57364: "DELETE",
		57378: "INSERT",
		57414: "UPDATE",
		57453: "COST",
		57355: "ASC",
		57365: "DESC",
		57430: "END",
		57432: "WHEN",
		57433: "ELSE",
		57354: "AS",
		57461: "FOR",
		57431: "THEN",
		57427: "LABELS",
		57495: "integer literal",
		57443: "TIME",
		57370: "EXISTS",
		57440: "DATE",
		57442: "TIMESTAMP",
		57487: "ABS",
		57462: "ARRAY_AGG",
		57463: "AVG",
		57429: "CASE",
		57473: "CAST",
		57488: "CEIL",
		57489: "CEILING",
		57464: "COUNT",
		57494: "decimal literal",
		57490: "ELEMENT_NUMBER",
		57470: "EXTRACT",
		57371: "FALSE",
		57491: "FLOOR",
		57492: "HAS_LABEL",
		57493: "ID",
		57482: "IN_DEGREE",
		57455: "INTERVAL",
		57483: "JAVA_REGEXP_LIKE",
		57484: "LABEL",
		57465: "LISTAGG",
		57480: "LOWER",
		57485: "MATCH_NUMBER",
		57466: "MAX",
		57467: "MIN",
		57486: "OUT_DEGREE",
		57460: "SUBSTRING",
		57468: "SUM",
		57411: "TRUE",
		57481: "UPPER",
		57421: "WHERE",
		57399: "ON",
		57507: "?",
		57511: "/-",
		57517: "/->",
		57513: "]-",
		57515: "]->",
		57369: "EDGE",
		57428: "PROPERTIES",
		57420: "VERTEX",
		57426: "BETWEEN",
		57406: "SET",
		57518: ".*",
		57514: "<-[",
		57512: "-[",
		57501: "->",
		57509: "<-",
		57469: "DISTINCT",
		57510: "-/",
		57516: "<-/",
		57448: "ALL",
		57449: "ANY",
		57451: "CHEAPEST",
		57376: "IF",
		57377: "INDEX",
		57450: "SHORTEST",
		57452: "TOP",
		57357: "BY",
		57360: "CREATE",
		57368: "DROP",
		57456: "HOUR",
		57385: "INTO",
		57393: "MATCH",
		57457: "MINUTE",
		57458: "MONTH",
		57397: "NULL",
		57459: "SECOND",
		57415: "USE",
		57476: "WITH",
		57477: "ZONE",
		57367: "DOUBLE",
		57372: "FLOAT",
		57384: "INTEGER",
		57386: "INT",
		57474: "LONG",
		57479: "PREFIX",
		57475: "STRING",
		57471: "TIMEZONE_HOUR",
		57472: "TIMEZONE_MINUTE",
		57412: "UNIQUE",
		57496: "&^",
		57497: ":=",
		57356: "BIGINT",
		57358: "CHARACTER",
		57359: "CHAR",
		57361: "CURRENT_TIMESTAMP",
		57362: "DECIMAL",
		57363: "DEFAULT",
		57366: "DESTINATION",
		57350: "identifier with double leading at",
		57379: "INT1",
		57380: "INT2",
		57381: "INT3",
		57382: "INT4",
		57383: "INT8",
		57351: "a special token never used by parser, used by lexer to indicate error",
		57502: "->>",
		57388: "KEY",
		57390: "LOCALTIME",
		57391: "LOCALTIMESTAMP",
		57392: "LONGTEXT",
		57503: "<<",
		57394: "MEDIUMINT",
		57395: "MEDIUMTEXT",
		57504: "!=",
		57506: "<=>",
		57398: "NUMERIC",
		57401: "PRECISION",
		57402: "PRIMARY",
		57403: "REAL",
		57404: "REFERENCES",
		57508: ">>",
		57349: "identifier with single leading at",
		57407: "SMALLINT",
		57408: "SOURCE",
		57409: "TINYINT",
		57410: "TINYTEXT",
		57347: "UNDERSCORE_CHARSET",
		57413: "UNSIGNED",
		57416: "VALUES",
		57417: "VARCHARACTER",
		57418: "VARCHAR",
		57419: "VARYING",
		57423: "ZEROFILL",
	}

	yyReductions = map[int]struct{xsym, components int}{
		0: {0, 1},
		1: {248, 1},
		2: {278, 1},
		3: {278, 3},
		4: {232, 1},
		5: {232, 1},
		6: {232, 1},
		7: {232, 1},
		8: {232, 1},
		9: {232, 1},
		10: {232, 1},
		11: {232, 1},
		12: {232, 1},
		13: {232, 1},
		14: {232, 1},
		15: {232, 1},
		16: {232, 1},
		17: {232, 1},
		18: {206, 0},
		19: {194, 1},
		20: {197, 1},
		21: {199, 4},
		22: {200, 10},
		23: {258, 0},
		24: {258, 1},
		25: {201, 9},
		26: {284, 1},
		27: {284, 3},
		28: {340, 0},
		29: {340, 1},
		30: {339, 1},
		31: {339, 2},
		32: {203, 4},
		33: {204, 6},
		34: {207, 2},
		35: {214, 3},
		36: {214, 10},
		37: {217, 0},
		38: {217, 1},
		39: {216, 2},
		40: {209, 1},
		41: {209, 3},
		42: {189, 3},
		43: {189, 7},
		44: {237, 1},
		45: {220, 2},
		46: {222, 0},
		47: {222, 1},
		48: {221, 4},
		49: {271, 0},
		50: {271, 1},
		51: {270, 4},
		52: {228, 1},
		53: {228, 3},
		54: {192, 3},
		55: {97, 3},
		56: {128, 1},
		57: {128, 1},
		58: {128, 1},
		59: {128, 1},
		60: {128, 1},
		61: {128, 1},
		62: {128, 1},
		63: {128, 1},
		64: {128, 1},
		65: {128, 1},
		66: {128, 1},
		67: {128, 1},
		68: {128, 1},
		69: {128, 1},
		70: {128, 1},
		71: {128, 1},
		72: {128, 1},
		73: {128, 1},
		74: {128, 1},
		75: {128, 1},
		76: {128, 1},
		77: {95, 1},
		78: {117, 1},
		79: {117, 1},
		80: {117, 1},
		81: {117, 1},
		82: {117, 1},
		83: {117, 1},
		84: {117, 1},
		85: {99, 1},
		86: {120, 1},
		87: {120, 1},
		88: {103, 1},
		89: {103, 1},
		90: {108, 2},
		91: {126, 2},
		92: {127, 2},
		93: {114, 3},
		94: {246, 1},
		95: {246, 1},
		96: {246, 1},
		97: {246, 1},
		98: {246, 1},
		99: {246, 1},
		100: {98, 1},
		101: {102, 2},
		102: {102, 3},
		103: {102, 3},
		104: {102, 3},
		105: {102, 3},
		106: {102, 3},
		107: {121, 3},
		108: {121, 3},
		109: {121, 3},
		110: {121, 3},
		111: {121, 3},
		112: {121, 3},
		113: {118, 3},
		114: {118, 3},
		115: {118, 3},
		116: {118, 2},
		117: {130, 1},
		118: {130, 1},
		119: {129, 1},
		120: {129, 1},
		121: {290, 3},
		122: {125, 3},
		123: {104, 3},
		124: {111, 4},
		125: {112, 1},
		126: {112, 1},
		127: {112, 1},
		128: {112, 1},
		129: {112, 1},
		130: {112, 1},
		131: {112, 1},
		132: {112, 1},
		133: {112, 1},
		134: {112, 1},
		135: {112, 1},
		136: {112, 1},
		137: {112, 1},
		138: {112, 1},
		139: {112, 1},
		140: {242, 1},
		141: {242, 3},
		142: {107, 7},
		143: {277, 1},
		144: {253, 0},
		145: {253, 2},
		146: {101, 4},
		147: {101, 5},
		148: {101, 5},
		149: {101, 5},
		150: {101, 5},
		151: {101, 5},
		152: {101, 5},
		153: {101, 6},
		154: {154, 0},
		155: {154, 1},
		156: {264, 0},
		157: {264, 2},
		158: {110, 6},
		159: {249, 1},
		160: {249, 1},
		161: {249, 1},
		162: {249, 1},
		163: {249, 1},
		164: {249, 1},
		165: {249, 1},
		166: {249, 1},
		167: {116, 3},
		168: {115, 4},
		169: {106, 6},
		170: {245, 1},
		171: {245, 1},
		172: {245, 1},
		173: {245, 1},
		174: {245, 1},
		175: {245, 1},
		176: {245, 1},
		177: {245, 1},
		178: {245, 1},
		179: {245, 4},
		180: {245, 1},
		181: {245, 4},
		182: {105, 1},
		183: {105, 1},
		184: {124, 5},
		185: {123, 4},
		186: {238, 1},
		187: {238, 2},
		188: {185, 4},
		189: {205, 0},
		190: {205, 2},
		191: {113, 3},
		192: {119, 4},
		193: {218, 3},
		194: {218, 1},
		195: {283, 1},
		196: {283, 3},
		197: {109, 2},
		198: {122, 1},
		199: {229, 1},
		200: {100, 3},
		201: {166, 8},
		202: {231, 3},
		203: {231, 2},
		204: {276, 1},
		205: {276, 3},
		206: {208, 1},
		207: {208, 3},
		208: {163, 2},
		209: {241, 0},
		210: {241, 2},
		211: {251, 0},
		212: {251, 1},
		213: {250, 1},
		214: {250, 2},
		215: {250, 1},
		216: {250, 2},
		217: {171, 2},
		218: {266, 1},
		219: {266, 3},
		220: {224, 4},
		221: {255, 2},
		222: {256, 0},
		223: {256, 1},
		224: {275, 0},
		225: {257, 1},
		226: {257, 3},
		227: {268, 1},
		228: {268, 3},
		229: {178, 1},
		230: {178, 2},
		231: {178, 3},
		232: {178, 3},
		233: {178, 4},
		234: {178, 3},
		235: {178, 3},
		236: {178, 4},
		237: {178, 2},
		238: {182, 1},
		239: {182, 3},
		240: {182, 3},
		241: {156, 3},
		242: {274, 4},
		243: {274, 4},
		244: {274, 4},
		245: {143, 3},
		246: {236, 0},
		247: {236, 1},
		248: {188, 3},
		249: {188, 1},
		250: {188, 3},
		251: {188, 1},
		252: {188, 3},
		253: {188, 1},
		254: {184, 2},
		255: {159, 0},
		256: {159, 1},
		257: {190, 2},
		258: {263, 0},
		259: {263, 1},
		260: {187, 1},
		261: {187, 1},
		262: {261, 0},
		263: {314, 0},
		264: {314, 3},
		265: {314, 1},
		266: {262, 1},
		267: {262, 3},
		268: {273, 2},
		269: {273, 8},
		270: {243, 2},
		271: {244, 0},
		272: {244, 1},
		273: {179, 1},
		274: {179, 1},
		275: {179, 1},
		276: {179, 3},
		277: {179, 4},
		278: {179, 5},
		279: {179, 4},
		280: {180, 0},
		281: {180, 1},
		282: {165, 0},
		283: {165, 1},
		284: {164, 1},
		285: {164, 2},
		286: {158, 5},
		287: {160, 0},
		288: {160, 2},
		289: {172, 0},
		290: {172, 3},
		291: {196, 1},
		292: {196, 3},
		293: {186, 1},
		294: {186, 2},
		295: {267, 1},
		296: {267, 1},
		297: {173, 0},
		298: {173, 2},
		299: {177, 0},
		300: {177, 3},
		301: {176, 0},
		302: {176, 2},
		303: {176, 4},
		304: {176, 4},
		305: {191, 1},
		306: {191, 1},
		307: {157, 1},
		308: {233, 9},
		309: {254, 1},
		310: {254, 3},
		311: {210, 5},
		312: {235, 2},
		313: {212, 0},
		314: {212, 2},
		315: {213, 0},
		316: {213, 3},
		317: {155, 1},
		318: {193, 1},
		319: {193, 3},
		320: {305, 0},
		321: {305, 1},
		322: {219, 1},
		323: {94, 1},
		324: {56, 1},
		325: {56, 1},
		326: {272, 1},
		327: {272, 3},
		328: {57, 1},
		329: {57, 1},
		330: {57, 1},
		331: {57, 1},
		332: {57, 1},
		333: {57, 1},
		334: {57, 1},
		335: {57, 1},
		336: {57, 1},
		337: {57, 1},
	}

	yyXErrors = map[yyXError]string{
	}

	yyParseTab = [564][]uint16{
		// 0
		{1: 320, 320, 4: 356, 357, 7: 361, 9: 363, 41: 56, 43: 366, 56, 362, 56, 158: 365, 164: 364, 359, 353, 194: 343, 197: 344, 358, 345, 346, 347, 360, 348, 349, 206: 342, 350, 214: 351, 229: 352, 232: 341, 354, 367, 355, 248: 339, 278: 340},
		{1: 338},
		{1: 337, 900},
		{1: 336, 336},
		{1: 334, 334},
		// 5
		{1: 333, 333},
		{1: 332, 332},
		{1: 331, 331},
		{1: 330, 330},
		{1: 329, 329},
		// 10
		{1: 328, 328},
		{1: 327, 327},
		{1: 326, 326},
		{1: 325, 325},
		{1: 324, 324},
		// 15
		{1: 323, 323},
		{1: 322, 322},
		{1: 321, 321},
		{1: 319, 319},
		{1: 318, 318},
		// 20
		{8: 881, 175: 315, 258: 882, 282: 883},
		{41: 473, 44: 845, 846, 847, 231: 472},
		{8: 835, 175: 836},
		{41: 56, 43: 366, 158: 365, 164: 364, 471, 834},
		{139: 301, 141: 301, 215: 798, 797, 796},
		// 25
		{1: 139, 139},
		{41: 55, 43: 366, 55, 55, 55, 158: 795},
		{41: 54, 43: 54, 54, 54, 54},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 56: 382, 371},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 56: 369, 371, 155: 368},
		// 30
		{1: 26, 26},
		{21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 18: 21, 21, 21, 23: 21, 26: 21, 96: 21, 139: 21, 141: 21},
		{14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 58: 14, 96: 14, 131: 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 144: 14, 14, 14, 14, 14},
		{13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 58: 13, 96: 13, 131: 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 144: 13, 13, 13, 13, 13},
		{10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 58: 10, 96: 10, 131: 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 144: 10, 10, 10, 10, 10},
		// 35
		{9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 58: 9, 96: 9, 131: 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 144: 9, 9, 9, 9, 9},
		{8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 58: 8, 96: 8, 131: 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 144: 8, 8, 8, 8, 8},
		{7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 58: 7, 96: 7, 131: 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 144: 7, 7, 7, 7, 7},
		{6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 58: 6, 96: 6, 131: 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 144: 6, 6, 6, 6, 6},
		{5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 58: 5, 96: 5, 131: 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 144: 5, 5, 5, 5, 5},
		// 40
		{4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 58: 4, 96: 4, 131: 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 144: 4, 4, 4, 4, 4},
		{3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 58: 3, 96: 3, 131: 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 144: 3, 3, 3, 3, 3},
		{2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 58: 2, 96: 2, 131: 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 144: 2, 2, 2, 2, 2},
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 58: 1, 96: 1, 131: 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 144: 1, 1, 1, 1, 1},
		{53: 383},
		// 45
		{23: 389, 143: 388, 168: 386, 385, 178: 390, 182: 384, 387},
		{109, 109, 109, 14: 109, 736, 18: 109, 109, 109, 26: 109, 41: 109, 43: 109, 109, 109, 109, 96: 109, 131: 109, 149: 734, 732, 733, 735, 162: 784, 167: 785, 188: 783, 274: 782},
		{23: 389, 143: 730, 156: 777, 170: 779, 181: 778},
		{23: 389, 143: 730, 156: 774, 170: 773, 181: 772},
		{59: 603, 157: 726},
		// 50
		{100, 100, 100, 14: 100, 100, 18: 100, 100, 100, 26: 100, 41: 100, 43: 100, 100, 100, 100, 96: 100, 131: 100, 149: 100, 100, 100, 100, 162: 100, 167: 100},
		{83, 3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 25: 83, 56: 557, 371, 138: 83, 159: 556, 184: 555},
		{41: 51, 43: 51, 51, 51, 51, 96: 392, 160: 391},
		{41: 52, 43: 52, 52, 52, 52},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 433},
		// 55
		{282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 24: 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 282, 142: 721},
		{281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 24: 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 281, 281},
		{280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 24: 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280, 280},
		{279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 24: 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 279, 279},
		{278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 24: 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278},
		// 60
		{277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 24: 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277, 277},
		{276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 24: 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276, 276},
		{275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 24: 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275, 275},
		{274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 24: 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274, 274},
		{273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 24: 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273},
		// 65
		{272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 24: 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272, 272},
		{271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 24: 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271, 271},
		{270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 24: 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270},
		{269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 24: 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269, 269},
		{268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 24: 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268, 268},
		// 70
		{267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 24: 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267},
		{266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 24: 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266, 266},
		{265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 24: 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265, 265},
		{264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 24: 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264, 264},
		{263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 24: 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263},
		// 75
		{262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 24: 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262, 262},
		{261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 24: 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 261, 142: 261, 147: 261},
		{260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 24: 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260, 260},
		{259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 24: 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259, 259},
		{258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 24: 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258, 258},
		// 80
		{257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 24: 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257, 257},
		{256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 24: 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256},
		{255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 24: 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255},
		{254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 24: 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254},
		{253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 24: 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253, 253},
		// 85
		{252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 24: 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252, 252},
		{251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 24: 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251, 251},
		{250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 24: 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250},
		{249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 24: 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249},
		{17: 720},
		// 90
		{17: 719},
		{17: 718},
		{17: 710},
		{238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 24: 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238, 238},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 709},
		// 95
		{50, 50, 50, 15: 492, 509, 18: 50, 50, 50, 22: 488, 24: 491, 507, 50, 505, 508, 490, 489, 496, 495, 504, 493, 497, 498, 494, 503, 506, 502, 50, 500, 50, 50, 50, 50, 50, 129: 501, 499},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 708},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 41: 56, 43: 366, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 706, 158: 365, 164: 364, 471, 470},
		{23: 700},
		{23: 213},
		// 100
		{23: 212},
		{23: 211},
		{23: 210},
		{23: 209},
		{23: 208},
		// 105
		{23: 207},
		{23: 206},
		{23: 205},
		{23: 204},
		{23: 203},
		// 110
		{23: 202},
		{23: 201},
		{23: 200},
		{23: 199},
		{23: 691},
		// 115
		{23: 685},
		{23: 681},
		{23: 677},
		{23: 673},
		{23: 669},
		// 120
		{23: 665},
		{23: 658},
		{23: 645},
		{23: 624},
		{156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 24: 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156},
		// 125
		{155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 24: 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 51: 612, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 609, 185: 611, 238: 610},
		{23: 469, 100: 468},
		{140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 24: 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140},
		{15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 24: 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 142: 15, 147: 15},
		// 130
		{141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 24: 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141},
		{41: 56, 43: 366, 158: 365, 164: 364, 471, 470},
		{608},
		{41: 473, 231: 472},
		{21: 546, 171: 545},
		// 135
		{3: 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 15: 184, 184, 184, 22: 476, 184, 58: 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 153: 474, 475},
		{3: 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 15: 183, 183, 183, 23: 183, 58: 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183, 183},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 481, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 477, 163: 480, 208: 479, 276: 478},
		{21: 135},
		{127, 127, 127, 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 127, 492, 509, 514, 127, 127, 127, 127, 488, 24: 491, 507, 27: 505, 508, 490, 489, 496, 495, 504, 493, 497, 498, 494, 503, 506, 502, 42: 500, 48: 127, 127, 53: 513, 56: 512, 371, 129: 501, 499, 250: 511, 510},
		// 140
		{14: 486, 21: 136},
		{14: 134, 21: 134},
		{14: 132, 21: 132},
		{3: 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 21: 15, 15, 24: 15, 15, 27: 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 42: 15, 53: 15, 142: 15, 148: 482},
		{14: 129, 21: 129, 241: 483, 269: 484},
		// 145
		{14: 131, 21: 131},
		{17: 422, 99: 485},
		{14: 128, 21: 128},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 481, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 477, 163: 480, 208: 487},
		{14: 133, 21: 133},
		// 150
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 544},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 543},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 542},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 541},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 540},
		// 155
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 539},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 538},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 537},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 536},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 535},
		// 160
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 534},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 533},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 532},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 531},
		{3: 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 15: 221, 221, 221, 23: 221, 58: 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221},
		// 165
		{3: 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 15: 220, 220, 220, 23: 220, 58: 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220},
		{3: 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 15: 219, 219, 219, 23: 219, 58: 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219},
		{3: 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 15: 218, 218, 218, 23: 218, 58: 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 530},
		{16: 528, 227: 527},
		// 170
		{23: 519, 61: 431, 98: 520, 218: 526},
		{28: 517},
		{130, 130, 130, 14: 130, 18: 130, 130, 130, 130, 48: 130, 130},
		{126, 126, 126, 14: 126, 18: 126, 126, 126, 126, 48: 126, 126},
		{125, 125, 125, 14: 125, 18: 125, 125, 125, 125, 48: 125, 125},
		// 175
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 17: 516, 56: 515, 371},
		{123, 123, 123, 14: 123, 18: 123, 123, 123, 123, 48: 123, 123},
		{124, 124, 124, 14: 124, 18: 124, 124, 124, 124, 48: 124, 124},
		{122, 122, 122, 14: 122, 18: 122, 122, 122, 122, 48: 122, 122},
		{23: 519, 61: 431, 98: 520, 218: 518},
		// 180
		{146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 24: 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 521, 283: 522},
		{144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 24: 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144},
		{143, 14: 143, 492, 509, 22: 488, 24: 491, 507, 27: 505, 508, 490, 489, 496, 495, 504, 493, 497, 498, 494, 503, 506, 502, 42: 500, 129: 501, 499},
		{523, 14: 524},
		// 185
		{145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 24: 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 525},
		{142, 14: 142, 492, 509, 22: 488, 24: 491, 507, 27: 505, 508, 490, 489, 496, 495, 504, 493, 497, 498, 494, 503, 506, 502, 42: 500, 129: 501, 499},
		{147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 24: 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147},
		{171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 24: 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171},
		// 190
		{227: 529},
		{170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 24: 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170},
		{216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 492, 509, 216, 216, 216, 216, 216, 488, 24: 491, 507, 216, 505, 508, 490, 489, 496, 495, 504, 493, 497, 498, 494, 216, 216, 216, 216, 500, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 216, 129: 501, 499},
		{223, 223, 223, 223, 223, 223, 223, 223, 223, 223, 223, 223, 223, 223, 223, 492, 509, 223, 223, 223, 223, 223, 488, 24: 491, 507, 223, 223, 508, 490, 489, 496, 495, 223, 493, 497, 498, 494, 223, 223, 223, 223, 223, 223, 223, 223, 223, 223, 223, 223, 223, 223, 223, 223, 223, 223, 129: 501, 499},
		{224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 492, 509, 224, 224, 224, 224, 224, 488, 24: 491, 507, 224, 505, 508, 490, 489, 496, 495, 504, 493, 497, 498, 494, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 129: 501, 499},
		// 195
		{225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 492, 509, 225, 225, 225, 225, 225, 488, 24: 491, 507, 225, 505, 508, 490, 489, 496, 495, 504, 493, 497, 498, 494, 225, 225, 225, 225, 500, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 225, 129: 501, 499},
		{226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 492, 509, 226, 226, 226, 226, 226, 488, 24: 491, 226, 226, 226, 226, 490, 489, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 226, 129: 501, 499},
		{227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 492, 509, 227, 227, 227, 227, 227, 488, 24: 491, 227, 227, 227, 227, 490, 489, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 227, 129: 501, 499},
		{228, 228, 228, 228, 228, 228, 228, 228, 228, 228, 228, 228, 228, 228, 228, 492, 509, 228, 228, 228, 228, 228, 488, 24: 491, 228, 228, 228, 228, 490, 489, 228, 228, 228, 228, 228, 228, 228, 228, 228, 228, 228, 228, 228, 228, 228, 228, 228, 228, 228, 228, 228, 228, 228, 228, 228, 129: 501, 499},
		{229, 229, 229, 229, 229, 229, 229, 229, 229, 229, 229, 229, 229, 229, 229, 492, 509, 229, 229, 229, 229, 229, 488, 24: 491, 229, 229, 229, 229, 490, 489, 229, 229, 229, 229, 229, 229, 229, 229, 229, 229, 229, 229, 229, 229, 229, 229, 229, 229, 229, 229, 229, 229, 229, 229, 229, 129: 501, 499},
		// 200
		{230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 492, 509, 230, 230, 230, 230, 230, 488, 24: 491, 230, 230, 230, 230, 490, 489, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 230, 129: 501, 499},
		{231, 231, 231, 231, 231, 231, 231, 231, 231, 231, 231, 231, 231, 231, 231, 492, 509, 231, 231, 231, 231, 231, 488, 24: 491, 231, 231, 231, 231, 490, 489, 231, 231, 231, 231, 231, 231, 231, 231, 231, 231, 231, 231, 231, 231, 231, 231, 231, 231, 231, 231, 231, 231, 231, 231, 231, 129: 501, 499},
		{232, 232, 232, 232, 232, 232, 232, 232, 232, 232, 232, 232, 232, 232, 232, 232, 509, 232, 232, 232, 232, 232, 488, 24: 232, 232, 232, 232, 232, 490, 489, 232, 232, 232, 232, 232, 232, 232, 232, 232, 232, 232, 232, 232, 232, 232, 232, 232, 232, 232, 232, 232, 232, 232, 232, 232, 129: 501, 499},
		{233, 233, 233, 233, 233, 233, 233, 233, 233, 233, 233, 233, 233, 233, 233, 233, 509, 233, 233, 233, 233, 233, 488, 24: 233, 233, 233, 233, 233, 490, 489, 233, 233, 233, 233, 233, 233, 233, 233, 233, 233, 233, 233, 233, 233, 233, 233, 233, 233, 233, 233, 233, 233, 233, 233, 233, 129: 501, 499},
		{234, 234, 234, 234, 234, 234, 234, 234, 234, 234, 234, 234, 234, 234, 234, 234, 509, 234, 234, 234, 234, 234, 234, 24: 234, 234, 234, 234, 234, 234, 234, 234, 234, 234, 234, 234, 234, 234, 234, 234, 234, 234, 234, 234, 234, 234, 234, 234, 234, 234, 234, 234, 234, 234, 234, 234, 129: 501, 499},
		// 205
		{235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 509, 235, 235, 235, 235, 235, 235, 24: 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 129: 501, 499},
		{236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 509, 236, 236, 236, 236, 236, 236, 24: 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236, 129: 501, 499},
		{51, 51, 51, 18: 51, 51, 51, 26: 51, 96: 392, 160: 579},
		{223: 549, 548, 266: 547},
		{121, 121, 121, 14: 577, 18: 121, 121, 121, 26: 121, 96: 121},
		// 210
		{120, 120, 120, 14: 120, 18: 120, 120, 120, 26: 120, 96: 120},
		{23: 552, 143: 388, 168: 386, 385, 178: 551, 182: 384, 387, 257: 550},
		{116, 116, 116, 14: 116, 18: 116, 116, 116, 26: 116, 96: 116, 131: 573, 255: 574, 572},
		{113, 113, 113, 14: 113, 18: 113, 113, 113, 26: 113, 96: 113, 131: 113},
		{83, 3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 23: 389, 25: 83, 56: 557, 371, 138: 83, 143: 388, 159: 556, 168: 386, 385, 178: 554, 182: 384, 387, 555, 268: 553},
		// 215
		{569, 14: 570},
		{111, 14: 111},
		{568},
		{80, 25: 562, 136: 80, 80, 561, 187: 559, 190: 560, 263: 558},
		{82, 82, 82, 14: 82, 21: 82, 25: 82, 58: 82, 136: 82, 82, 82, 140: 82, 146: 82},
		// 220
		{84, 136: 84, 84},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 56: 565, 371, 219: 564, 262: 563},
		{79, 136: 79, 79},
		{3: 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78},
		{3: 77, 77, 77, 77, 77, 77, 77, 77, 77, 77, 77},
		// 225
		{81, 22: 81, 24: 81, 132: 81, 81, 81, 81, 81, 81, 145: 566},
		{72, 22: 72, 24: 72, 132: 72, 72, 72, 72, 72, 72, 145: 72},
		{16, 22: 16, 24: 16, 132: 16, 16, 16, 16, 16, 16, 145: 16},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 56: 565, 371, 219: 567},
		{71, 22: 71, 24: 71, 132: 71, 71, 71, 71, 71, 71, 145: 71},
		// 230
		{93, 93, 93, 14: 93, 93, 18: 93, 93, 93, 23: 93, 26: 93, 41: 93, 43: 93, 93, 93, 93, 93, 96: 93, 131: 93, 149: 93, 93, 93, 93, 162: 93, 167: 93},
		{112, 112, 112, 14: 112, 18: 112, 112, 112, 26: 112, 96: 112, 131: 112},
		{23: 389, 143: 388, 168: 386, 385, 178: 571, 182: 384, 387},
		{110, 14: 110},
		{114, 114, 114, 14: 114, 18: 114, 114, 114, 26: 114, 96: 114, 275: 576},
		// 235
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 56: 369, 371, 155: 575},
		{115, 115, 115, 14: 115, 18: 115, 115, 115, 26: 115, 96: 115},
		{117, 117, 117, 14: 117, 18: 117, 117, 117, 26: 117, 96: 117},
		{118, 118, 118, 14: 118, 18: 118, 118, 118, 26: 118, 96: 118},
		{223: 549, 578},
		// 240
		{119, 119, 119, 14: 119, 18: 119, 119, 119, 26: 119, 96: 119},
		{49, 49, 49, 18: 49, 49, 49, 26: 581, 172: 580},
		{41, 41, 41, 18: 41, 41, 592, 173: 591},
		{195: 582},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 477, 163: 585, 186: 584, 196: 583},
		// 245
		{48, 48, 48, 14: 589, 18: 48, 48, 48},
		{47, 47, 47, 14: 47, 18: 47, 47, 47},
		{45, 45, 45, 14: 45, 18: 45, 45, 45, 48: 587, 588, 267: 586},
		{44, 44, 44, 14: 44, 18: 44, 44, 44},
		{43, 43, 43, 14: 43, 18: 43, 43, 43},
		// 250
		{42, 42, 42, 14: 42, 18: 42, 42, 42},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 477, 163: 585, 186: 590},
		{46, 46, 46, 14: 46, 18: 46, 46, 46},
		{39, 39, 39, 18: 39, 595, 177: 594},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 593},
		// 255
		{40, 40, 40, 15: 492, 509, 18: 40, 40, 22: 488, 24: 491, 507, 27: 505, 508, 490, 489, 496, 495, 504, 493, 497, 498, 494, 503, 506, 502, 42: 500, 129: 501, 499},
		{37, 37, 37, 18: 599, 176: 598},
		{195: 596},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 477, 163: 585, 186: 584, 196: 597},
		{38, 38, 38, 14: 589, 18: 38},
		// 260
		{137, 137, 137},
		{59: 603, 132: 602, 157: 601, 191: 600},
		{36, 36, 36, 605, 14: 604},
		{33, 33, 33, 33, 14: 33},
		{32, 32, 32, 32, 14: 32},
		// 265
		{31, 31, 31, 31, 14: 31, 161: 31, 170: 31, 181: 31},
		{59: 603, 132: 602, 157: 601, 191: 607},
		{59: 603, 132: 602, 157: 601, 191: 606},
		{34, 34, 34},
		{35, 35, 35},
		// 270
		{138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 24: 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138},
		{15: 492, 509, 22: 488, 24: 491, 507, 27: 505, 508, 490, 489, 496, 495, 504, 493, 497, 498, 494, 503, 506, 502, 42: 500, 51: 612, 129: 501, 499, 185: 611, 238: 621},
		{50: 149, 612, 618, 185: 617, 205: 616},
		{50: 152, 152, 152},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 613},
		// 275
		{15: 492, 509, 22: 488, 24: 491, 507, 27: 505, 508, 490, 489, 496, 495, 504, 493, 497, 498, 494, 503, 506, 502, 42: 500, 55: 614, 129: 501, 499},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 615},
		{15: 492, 509, 22: 488, 24: 491, 507, 27: 505, 508, 490, 489, 496, 495, 504, 493, 497, 498, 494, 503, 506, 502, 42: 500, 50: 150, 150, 150, 129: 501, 499},
		{50: 620},
		{50: 151, 151, 151},
		// 280
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 619},
		{15: 492, 509, 22: 488, 24: 491, 507, 27: 505, 508, 490, 489, 496, 495, 504, 493, 497, 498, 494, 503, 506, 502, 42: 500, 50: 148, 129: 501, 499},
		{153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 24: 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153},
		{50: 149, 612, 618, 185: 617, 205: 622},
		{50: 623},
		// 285
		{154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 24: 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 625},
		{15: 492, 509, 22: 488, 24: 491, 507, 27: 505, 508, 490, 489, 496, 495, 504, 493, 497, 498, 494, 503, 506, 502, 42: 500, 53: 626, 129: 501, 499},
		{11: 629, 60: 636, 63: 635, 637, 245: 627, 247: 634, 252: 633, 259: 630, 631, 265: 632, 279: 628},
		{644},
		// 290
		{168},
		{167},
		{166},
		{165},
		{164},
		// 295
		{163},
		{162},
		{161},
		{160, 239: 641},
		{158, 239: 638},
		// 300
		{60: 639},
		{240: 640},
		{157},
		{60: 642},
		{240: 643},
		// 305
		{159},
		{169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 24: 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169, 169},
		{6: 649, 10: 647, 211: 650, 225: 651, 648, 230: 652, 249: 646, 280: 653, 654},
		{21: 655},
		{21: 179},
		// 310
		{21: 178},
		{21: 177},
		{21: 176},
		{21: 175},
		{21: 174},
		// 315
		{21: 173},
		{21: 172},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 656},
		{657, 15: 492, 509, 22: 488, 24: 491, 507, 27: 505, 508, 490, 489, 496, 495, 504, 493, 497, 498, 494, 503, 506, 502, 42: 500, 129: 501, 499},
		{180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 24: 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180},
		// 320
		{3: 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 15: 184, 184, 184, 23: 184, 58: 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 153: 474, 659},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 660},
		{182, 14: 662, 492, 509, 22: 488, 24: 491, 507, 27: 505, 508, 490, 489, 496, 495, 504, 493, 497, 498, 494, 503, 506, 502, 42: 500, 129: 501, 499, 264: 661},
		{664},
		{17: 422, 99: 663},
		// 325
		{181},
		{185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 24: 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185},
		{3: 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 15: 184, 184, 184, 23: 184, 58: 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 153: 474, 666},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 667},
		{668, 15: 492, 509, 22: 488, 24: 491, 507, 27: 505, 508, 490, 489, 496, 495, 504, 493, 497, 498, 494, 503, 506, 502, 42: 500, 129: 501, 499},
		// 330
		{186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 24: 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186},
		{3: 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 15: 184, 184, 184, 23: 184, 58: 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 153: 474, 670},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 671},
		{672, 15: 492, 509, 22: 488, 24: 491, 507, 27: 505, 508, 490, 489, 496, 495, 504, 493, 497, 498, 494, 503, 506, 502, 42: 500, 129: 501, 499},
		{187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 24: 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187},
		// 335
		{3: 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 15: 184, 184, 184, 23: 184, 58: 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 153: 474, 674},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 675},
		{676, 15: 492, 509, 22: 488, 24: 491, 507, 27: 505, 508, 490, 489, 496, 495, 504, 493, 497, 498, 494, 503, 506, 502, 42: 500, 129: 501, 499},
		{188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 24: 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188},
		{3: 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 15: 184, 184, 184, 23: 184, 58: 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 153: 474, 678},
		// 340
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 679},
		{680, 15: 492, 509, 22: 488, 24: 491, 507, 27: 505, 508, 490, 489, 496, 495, 504, 493, 497, 498, 494, 503, 506, 502, 42: 500, 129: 501, 499},
		{189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 24: 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189},
		{3: 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 15: 184, 184, 184, 23: 184, 58: 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 153: 474, 682},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 683},
		// 345
		{684, 15: 492, 509, 22: 488, 24: 491, 507, 27: 505, 508, 490, 489, 496, 495, 504, 493, 497, 498, 494, 503, 506, 502, 42: 500, 129: 501, 499},
		{190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 24: 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190},
		{3: 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 15: 184, 184, 184, 22: 686, 184, 58: 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 153: 474, 687},
		{690},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 688},
		// 350
		{689, 15: 492, 509, 22: 488, 24: 491, 507, 27: 505, 508, 490, 489, 496, 495, 504, 493, 497, 498, 494, 503, 506, 502, 42: 500, 129: 501, 499},
		{191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 24: 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191},
		{192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 24: 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 692},
		{15: 492, 509, 21: 693, 488, 24: 491, 507, 27: 505, 508, 490, 489, 496, 495, 504, 493, 497, 498, 494, 503, 506, 502, 42: 500, 129: 501, 499},
		// 355
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 694, 277: 695},
		{195, 15: 492, 509, 22: 488, 24: 491, 507, 27: 505, 508, 490, 489, 496, 495, 504, 493, 497, 498, 494, 503, 506, 502, 42: 500, 54: 195, 129: 501, 499},
		{194, 54: 697, 253: 696},
		{699},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 698},
		// 360
		{193, 15: 492, 509, 22: 488, 24: 491, 507, 27: 505, 508, 490, 489, 496, 495, 504, 493, 497, 498, 494, 503, 506, 502, 42: 500, 129: 501, 499},
		{196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 24: 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 701, 242: 702},
		{198, 14: 198, 492, 509, 22: 488, 24: 491, 507, 27: 505, 508, 490, 489, 496, 495, 504, 493, 497, 498, 494, 503, 506, 502, 42: 500, 129: 501, 499},
		{703, 14: 704},
		// 365
		{214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 24: 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214, 214},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 705},
		{197, 14: 197, 492, 509, 22: 488, 24: 491, 507, 27: 505, 508, 490, 489, 496, 495, 504, 493, 497, 498, 494, 503, 506, 502, 42: 500, 129: 501, 499},
		{707, 15: 492, 509, 22: 488, 24: 491, 507, 27: 505, 508, 490, 489, 496, 495, 504, 493, 497, 498, 494, 503, 506, 502, 42: 500, 129: 501, 499},
		{215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 24: 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215, 215},
		// 370
		{222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 509, 222, 222, 222, 222, 222, 222, 24: 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 222, 129: 501, 499},
		{237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 509, 237, 237, 237, 237, 237, 237, 24: 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 237, 129: 501, 499},
		{6: 714, 10: 712, 211: 715, 225: 716, 713, 230: 717, 246: 711},
		{245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 24: 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245},
		{244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 24: 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244, 244},
		// 375
		{243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 24: 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243, 243},
		{242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 24: 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242, 242},
		{241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 24: 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241, 241},
		{240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 24: 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240},
		{239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 24: 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239},
		// 380
		{246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 24: 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246, 246},
		{247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 24: 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247, 247},
		{248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 24: 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248, 248},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 56: 723, 371, 193: 722},
		{283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 24: 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 283, 144: 283},
		// 385
		{20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 24: 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 142: 724, 144: 20},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 56: 725, 371},
		{19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 24: 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 144: 19},
		{170: 728, 181: 727},
		{23: 389, 143: 730, 156: 771},
		// 390
		{23: 389, 143: 730, 156: 729},
		{102, 102, 102, 14: 102, 18: 102, 102, 102, 26: 102, 41: 102, 43: 102, 102, 102, 102, 96: 102, 131: 102},
		{15: 736, 23: 738, 149: 734, 732, 733, 735, 188: 737, 273: 731},
		{23: 389, 143: 770},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 25: 83, 56: 557, 371, 136: 83, 83, 83, 159: 556, 184: 767},
		// 395
		{89, 22: 89, 89, 89, 47: 89, 96: 89, 132: 89, 134: 89},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 25: 83, 56: 557, 371, 136: 83, 138: 83, 159: 556, 184: 765},
		{87, 22: 87, 87, 87, 47: 87, 96: 87, 132: 87, 134: 87},
		{85, 22: 85, 85, 85, 47: 85, 96: 85, 132: 85, 134: 85},
		{22: 750, 58, 751, 132: 752, 134: 753, 179: 754, 764},
		// 400
		{15: 92, 23: 389, 143: 739, 149: 92, 92, 92, 92, 236: 740},
		{91, 15: 91, 47: 91, 96: 91, 149: 91, 91, 91, 91},
		{15: 736, 149: 734, 732, 733, 735, 188: 741},
		{92, 23: 389, 47: 92, 96: 92, 143: 739, 236: 742},
		{51, 47: 51, 96: 392, 160: 743},
		// 405
		{67, 47: 745, 243: 746, 744},
		{748},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 747},
		{66},
		{68, 15: 492, 509, 22: 488, 24: 491, 507, 27: 505, 508, 490, 489, 496, 495, 504, 493, 497, 498, 494, 503, 506, 502, 42: 500, 129: 501, 499},
		// 410
		{22: 750, 58, 751, 132: 752, 134: 753, 179: 754, 749},
		{23: 69},
		{23: 65, 133: 65, 135: 65},
		{23: 64, 133: 64, 135: 64},
		{23: 63, 133: 63, 135: 63},
		// 415
		{14: 756, 59: 603, 157: 755},
		{23: 57, 133: 57, 135: 57},
		{14: 760, 161: 759},
		{59: 603, 157: 757},
		{161: 758},
		// 420
		{23: 59, 133: 59, 135: 59},
		{23: 62, 133: 62, 135: 62},
		{59: 603, 157: 762, 161: 761},
		{23: 61, 133: 61, 135: 61},
		{161: 763},
		// 425
		{23: 60, 133: 60, 135: 60},
		{23: 70},
		{136: 766},
		{88, 22: 88, 88, 88, 47: 88, 96: 88, 132: 88, 134: 88},
		{136: 769, 768},
		// 430
		{90, 22: 90, 90, 90, 47: 90, 96: 90, 132: 90, 134: 90},
		{86, 22: 86, 86, 86, 47: 86, 96: 86, 132: 86, 134: 86},
		{97, 97, 97, 14: 97, 18: 97, 97, 97, 26: 97, 41: 97, 43: 97, 97, 97, 97, 96: 97, 131: 97},
		{105, 105, 105, 14: 105, 18: 105, 105, 105, 26: 105, 41: 105, 43: 105, 105, 105, 105, 96: 105, 131: 105},
		{23: 389, 143: 730, 156: 776},
		// 435
		{23: 389, 143: 730, 156: 775},
		{101, 101, 101, 14: 101, 18: 101, 101, 101, 26: 101, 41: 101, 43: 101, 101, 101, 101, 96: 101, 131: 101},
		{103, 103, 103, 14: 103, 18: 103, 103, 103, 26: 103, 41: 103, 43: 103, 103, 103, 103, 96: 103, 131: 103},
		{106, 106, 106, 14: 106, 18: 106, 106, 106, 26: 106, 41: 106, 43: 106, 106, 106, 106, 96: 106, 131: 106},
		{108, 108, 108, 14: 108, 18: 108, 108, 108, 26: 108, 41: 108, 43: 108, 108, 108, 108, 96: 108, 131: 108},
		// 440
		{23: 389, 143: 730, 156: 781},
		{23: 389, 143: 730, 156: 780},
		{104, 104, 104, 14: 104, 18: 104, 104, 104, 26: 104, 41: 104, 43: 104, 104, 104, 104, 96: 104, 131: 104},
		{107, 107, 107, 14: 107, 18: 107, 107, 107, 26: 107, 41: 107, 43: 107, 107, 107, 107, 96: 107, 131: 107},
		{23: 389, 143: 794},
		// 445
		{23: 389, 143: 793},
		{25: 562, 138: 561, 187: 559, 190: 789},
		{25: 562, 138: 561, 187: 559, 190: 786},
		{22: 750, 24: 751, 132: 752, 58, 753, 179: 754, 787},
		{133: 788},
		// 450
		{23: 95},
		{22: 750, 24: 751, 132: 752, 58, 753, 58, 179: 754, 790},
		{133: 792, 135: 791},
		{23: 96},
		{23: 94},
		// 455
		{98, 98, 98, 14: 98, 98, 18: 98, 98, 98, 26: 98, 41: 98, 43: 98, 98, 98, 98, 96: 98, 131: 98, 149: 98, 98, 98, 98, 162: 98, 167: 98},
		{99, 99, 99, 14: 99, 99, 18: 99, 99, 99, 26: 99, 41: 99, 43: 99, 99, 99, 99, 96: 99, 131: 99, 149: 99, 99, 99, 99, 162: 99, 167: 99},
		{41: 53, 43: 53, 53, 53, 53},
		{139: 803, 141: 802, 189: 801, 209: 800},
		{139: 300, 141: 300},
		// 460
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 56: 369, 371, 155: 799},
		{139: 299, 141: 299},
		{1: 303, 303, 14: 832},
		{1: 298, 298, 14: 298, 21: 298},
		{1: 83, 83, 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 83, 21: 83, 56: 557, 371, 83, 140: 83, 159: 830},
		// 465
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 56: 557, 371, 146: 83, 159: 804},
		{146: 805},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 56: 807, 371, 237: 806},
		{27: 808},
		{1: 294, 294, 14: 294, 21: 294, 27: 294, 58: 294, 140: 294},
		// 470
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 56: 807, 371, 237: 809},
		{1: 292, 292, 14: 292, 21: 292, 58: 813, 140: 292, 220: 810, 812, 811},
		{1: 295, 295, 14: 295, 21: 295},
		{1: 289, 289, 14: 289, 21: 289, 140: 819, 270: 818, 817},
		{1: 291, 291, 14: 291, 21: 291, 140: 291},
		// 475
		{23: 814},
		{76, 261: 815},
		{816},
		{1: 290, 290, 14: 290, 21: 290, 140: 290},
		{1: 293, 293, 14: 293, 21: 293},
		// 480
		{1: 288, 288, 14: 288, 21: 288},
		{23: 820},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 56: 467, 371, 94: 414, 824, 97: 823, 192: 822, 228: 821},
		{827, 14: 828},
		{286, 14: 286},
		// 485
		{144: 825},
		{142: 721},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 15: 432, 434, 422, 23: 435, 56: 467, 371, 446, 423, 428, 431, 465, 427, 429, 440, 458, 456, 464, 461, 441, 442, 453, 424, 449, 460, 425, 443, 447, 444, 450, 430, 439, 445, 459, 437, 448, 455, 454, 451, 452, 457, 426, 438, 414, 393, 97: 394, 396, 415, 466, 404, 397, 417, 401, 409, 408, 403, 418, 412, 405, 402, 436, 410, 421, 407, 406, 395, 399, 411, 416, 398, 413, 463, 462, 400, 419, 420, 826},
		{284, 14: 284, 492, 509, 22: 488, 24: 491, 507, 27: 505, 508, 490, 489, 496, 495, 504, 493, 497, 498, 494, 503, 506, 502, 42: 500, 129: 501, 499},
		{1: 287, 287, 14: 287, 21: 287},
		// 490
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 56: 467, 371, 94: 414, 824, 97: 823, 192: 829},
		{285, 14: 285},
		{1: 292, 292, 14: 292, 21: 292, 58: 813, 140: 292, 220: 831, 812, 811},
		{1: 296, 296, 14: 296, 21: 296},
		{139: 803, 141: 802, 189: 833},
		// 495
		{1: 297, 297, 14: 297, 21: 297},
		{1: 304, 304},
		{3: 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 174: 838, 212: 843},
		{3: 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 174: 838, 212: 837},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 56: 840, 371},
		// 500
		{62: 839},
		{3: 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24},
		{131: 841},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 56: 369, 371, 155: 842},
		{1: 305, 305},
		// 505
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 56: 369, 371, 155: 844},
		{1: 306, 306},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 56: 467, 371, 94: 414, 872, 284: 871},
		{139: 301, 141: 301, 215: 798, 797, 863},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 56: 467, 371, 94: 414, 850, 210: 849, 254: 848},
		// 510
		{14: 856, 21: 546, 171: 855},
		{14: 29, 21: 29},
		{147: 851},
		{23: 852},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 56: 467, 371, 94: 414, 824, 97: 823, 192: 822, 228: 853},
		// 515
		{854, 14: 828},
		{14: 27, 21: 27},
		{1: 51, 51, 18: 51, 51, 51, 26: 51, 96: 392, 160: 858},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 56: 467, 371, 94: 414, 850, 210: 857},
		{14: 28, 21: 28},
		// 520
		{1: 49, 49, 18: 49, 49, 49, 26: 581, 172: 859},
		{1: 41, 41, 18: 41, 41, 592, 173: 860},
		{1: 39, 39, 18: 39, 595, 177: 861},
		{1: 37, 37, 18: 599, 176: 862},
		{1: 30, 30},
		// 525
		{139: 803, 141: 802, 189: 801, 209: 864},
		{14: 832, 21: 546, 171: 865},
		{1: 51, 51, 18: 51, 51, 51, 26: 51, 96: 392, 160: 866},
		{1: 49, 49, 18: 49, 49, 49, 26: 581, 172: 867},
		{1: 41, 41, 18: 41, 41, 592, 173: 868},
		// 530
		{1: 39, 39, 18: 39, 595, 177: 869},
		{1: 37, 37, 18: 599, 176: 870},
		{1: 302, 302},
		{14: 874, 21: 546, 171: 873},
		{14: 312, 21: 312},
		// 535
		{1: 51, 51, 18: 51, 51, 51, 26: 51, 96: 392, 160: 876},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 56: 467, 371, 94: 414, 875},
		{14: 311, 21: 311},
		{1: 49, 49, 18: 49, 49, 49, 26: 581, 172: 877},
		{1: 41, 41, 18: 41, 41, 592, 173: 878},
		// 540
		{1: 39, 39, 18: 39, 595, 177: 879},
		{1: 37, 37, 18: 599, 176: 880},
		{1: 313, 313},
		{3: 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 174: 886, 213: 898},
		{175: 884},
		// 545
		{175: 314},
		{131: 23, 174: 886, 213: 885},
		{131: 889},
		{16: 887},
		{62: 888},
		// 550
		{3: 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 131: 22},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 56: 369, 371, 155: 890},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 56: 369, 371, 155: 891},
		{23: 892},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 56: 723, 371, 193: 894, 272: 893},
		// 555
		{895, 14: 896},
		{12, 14: 12},
		{1: 316, 316},
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 56: 723, 371, 193: 897},
		{11, 14: 11},
		// 560
		{3: 380, 372, 373, 378, 376, 381, 379, 377, 375, 374, 370, 56: 369, 371, 155: 899},
		{1: 317, 317},
		{1: 320, 320, 4: 356, 357, 7: 361, 9: 363, 41: 56, 43: 366, 56, 362, 56, 158: 365, 164: 364, 359, 353, 194: 343, 197: 344, 358, 345, 346, 347, 360, 348, 349, 206: 342, 350, 214: 351, 229: 352, 232: 901, 354, 367, 355},
		{1: 335, 335},
	}
)

var yyDebug = 0

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyLexerEx interface {
	yyLexer
	Reduced(rule, state int, lval *yySymType) bool
}

func yySymName(c int) (s string) {
	x, ok := yyXLAT[c]
	if ok {
		return yySymNames[x]
	}

	if c < 0x7f {
		return __yyfmt__.Sprintf("%q", c)
	}

	return __yyfmt__.Sprintf("%d", c)
}

func yylex1(yylex yyLexer, lval *yySymType) (n int) {
	n = yylex.Lex(lval)
	if n <= 0 {
		n = yyEofCode
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("\nlex %s(%#x %d), lval: %+v\n", yySymName(n), n, n, lval)
	}
	return n
}
	
func yyParse(yylex yyLexer) int {
	const yyError = 302

	yyEx, _ := yylex.(yyLexerEx)
	var yyn int
	var yylval yySymType
	var yyVAL yySymType
	yyS := make([]yySymType, 200)


	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yyerrok := func() { 
		if yyDebug >= 2 {
			__yyfmt__.Printf("yyerrok()\n")
		}
		Errflag = 0
	}
	_ = yyerrok
	yystate := 0
	yychar := -1
	var yyxchar int
	var yyshift int
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	if yychar < 0 {
		yylval.yys = yystate
		yychar = yylex1(yylex, &yylval)
		var ok bool
		if yyxchar, ok = yyXLAT[yychar]; !ok {
			yyxchar = len(yySymNames) // > tab width
		}
	}
	if yyDebug >= 4 {
		var a []int
		for _, v := range yyS[:yyp+1] {
			a = append(a, v.yys)
		}
		__yyfmt__.Printf("state stack %v\n", a)
	}
	row := yyParseTab[yystate]
	yyn = 0
	if yyxchar < len(row) {
		if yyn = int(row[yyxchar]); yyn != 0 {
			yyn += yyTabOfs
		}
	}
	switch {
	case yyn > 0: // shift
		yychar = -1
		yyVAL = yylval
		yystate = yyn
		yyshift = yyn
		if yyDebug >= 2 {
			__yyfmt__.Printf("shift, and goto state %d\n", yystate)
		}
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	case yyn < 0: // reduce
	case yystate == 1: // accept
		if yyDebug >= 2 {
			__yyfmt__.Println("accept")
		}
		goto ret0
	}

	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			if yyDebug >= 1 {
				__yyfmt__.Printf("no action for %s in state %d\n", yySymName(yychar), yystate)
			}
			msg, ok := yyXErrors[yyXError{yystate, yyxchar}]
			if !ok {
				msg, ok = yyXErrors[yyXError{yystate, -1}]
			}
			if !ok && yyshift != 0 {
				msg, ok = yyXErrors[yyXError{yyshift, yyxchar}]
			}
			if !ok {
				msg, ok = yyXErrors[yyXError{yyshift, -1}]
			}
			if yychar > 0 {
				ls := yyTokenLiteralStrings[yychar]
				if ls == "" {
					ls = yySymName(yychar)
				}
				if ls != "" {
					switch {
					case msg == "":
						msg = __yyfmt__.Sprintf("unexpected %s", ls)
					default:
						msg = __yyfmt__.Sprintf("unexpected %s, %s", ls, msg)
					}
				}
			}
			if msg == "" {
				msg = "syntax error"
			}
			yylex.Error(msg)
			Nerrs++
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				row := yyParseTab[yyS[yyp].yys]
				if yyError < len(row) {
					yyn = int(row[yyError])+yyTabOfs
					if yyn > 0 { // hit
						if yyDebug >= 2 {
							__yyfmt__.Printf("error recovery found error shift in state %d\n", yyS[yyp].yys)
						}
						yystate = yyn /* simulate a shift of "error" */
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery failed\n")
			}
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yySymName(yychar))
			}
			if yychar == yyEofCode {
				goto ret1
			}

			yychar = -1
			goto yynewstate /* try again in the same state */
		}
	}

	r := -yyn
	x0 := yyReductions[r]
	x, n := x0.xsym, x0.components
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= n
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	exState := yystate
	yystate = int(yyParseTab[yyS[yyp].yys][x])+yyTabOfs
	/* reduction by production r */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce using rule %v (%s), and goto state %d\n", r, yySymNames[x], yystate)
	}

	switch r {
	case 2: {
		yyVAL.item = yyS[yypt-0].statement
	}
	case 23: {
		yyVAL.item = ast.IndexKeyTypeNone
	}
	case 24: {
		yyVAL.item = ast.IndexKeyTypeUnique
	}
	case 28: {
		yyVAL.item = model.CIStr{}
	}
	case 30: {
		yyVAL.item = model.NewCIStr(yyS[yypt-0].ident)
	}
	case 31: {
		yyVAL.item = model.NewCIStr(yyS[yypt-0].ident)
	}
	case 211: {
		yyVAL.ident = ""
	}
	case 218: {
		yyVAL.item = &ast.MatchClauseList{Matches: []*ast.MatchClause{yyS[yypt-0].item.(*ast.MatchClause)}}
	}
	case 219: {
		ml := yyS[yypt-2].item.(*ast.MatchClauseList)
		ml.Matches = append(ml.Matches, yyS[yypt-0].item.(*ast.MatchClause))
		yyVAL.item = ml
	}
	case 220: {
		yyVAL.item = &ast.MatchClause{
			Graph: yyS[yypt-1].item.(*ast.GraphName),
			Paths: yyS[yypt-2].item.([]*ast.PathPattern),
		}
	}
	case 221: {
		yyVAL.item = yyS[yypt-0].ident
	}
	case 222: {
		yyVAL.item = (*ast.GraphName)(nil)
	}
	case 225: {
		yyVAL.item = []*ast.PathPattern{yyS[yypt-0].item.(*ast.PathPattern)}
	}
	case 226: {
		yyVAL.item = yyS[yypt-1].item.([]*ast.PathPattern)
	}
	case 227: {
		yyVAL.item = yyS[yypt-0].item.(*ast.PathPattern)
	}
	case 228: {
		yyVAL.item = append(yyS[yypt-2].item.([]*ast.PathPattern), yyS[yypt-0].item.(*ast.PathPattern))
	}
	case 229: {
		pp := yyS[yypt-0].item.(*ast.PathPattern)
		pp.Tp = ast.PathPatternSimple
		yyVAL.item = pp
	}
	case 230: {
		pp := yyS[yypt-0].item.(*ast.PathPattern)
		pp.Tp = ast.PathPatternAny
		yyVAL.item = pp
	}
	case 231: {
		pp := yyS[yypt-0].item.(*ast.PathPattern)
		pp.Tp = ast.PathPatternAnyShortest
		yyVAL.item = pp
	}
	case 232: {
		pp := yyS[yypt-0].item.(*ast.PathPattern)
		pp.Tp = ast.PathPatternAllShortest
		yyVAL.item = pp
	}
	case 233: {
		pp := yyS[yypt-0].item.(*ast.PathPattern)
		pp.Tp = ast.PathPatternTopKShortest
		pp.TopK = yyS[yypt-2].item.(uint64)
		yyVAL.item = pp
	}
	case 234: {
		pp := yyS[yypt-0].item.(*ast.PathPattern)
		pp.Tp = ast.PathPatternAnyCheapest
		yyVAL.item = pp
	}
	case 235: {
		pp := yyS[yypt-0].item.(*ast.PathPattern)
		pp.Tp = ast.PathPatternAllCheapest
		yyVAL.item = pp
	}
	case 236: {
		pp := yyS[yypt-0].item.(*ast.PathPattern)
		pp.Tp = ast.PathPatternTopKCheapest
		pp.TopK = yyS[yypt-2].item.(uint64)
		yyVAL.item = pp
	}
	case 237: {
		pp := yyS[yypt-0].item.(*ast.PathPattern)
		pp.Tp = ast.PathPatternAll
		yyVAL.item = pp
	}
	case 238: {
		yyVAL.item = &ast.PathPattern{Vertices: []*ast.VertexPattern{yyS[yypt-0].item.(*ast.VertexPattern)}}
	}
	case 239: {
		pp := yyS[yypt-2].item.(*ast.PathPattern)
		pp.Vertices = append(pp.Vertices, yyS[yypt-0].item.(*ast.VertexPattern))
		pp.Connections = append(pp.Connections, yyS[yypt-1].item.(*ast.ReachabilityPathExpr))
		yyVAL.item = pp
	}
	case 240: {
		pp := yyS[yypt-2].item.(*ast.PathPattern)
		pp.Vertices = append(pp.Vertices, yyS[yypt-0].item.(*ast.VertexPattern))
		pp.Connections = append(pp.Connections, yyS[yypt-1].item.(*ast.EdgePattern))
		yyVAL.item = pp
	}
	case 241: {
		yyVAL.item = &ast.PathPattern{
			Vertices:    []*ast.VertexPattern{yyS[yypt-2].item.(*ast.VertexPattern), yyS[yypt-0].item.(*ast.VertexPattern)},
			Connections: []ast.VertexPairConnection{yyS[yypt-1].item.(*ast.QuantifiedPathExpr)},
		}
	}
	case 242: {
		yyVAL.item = &ast.ReachabilityPathExpr{
			Labels:     yyS[yypt-2].item.([]model.CIStr),
			Direction:  ast.EdgeDirectionOutgoing,
			Quantifier: yyS[yypt-1].item.(*ast.PatternQuantifier),
		}
	}
	case 243: {
		yyVAL.item = &ast.ReachabilityPathExpr{
			Labels:     yyS[yypt-2].item.([]model.CIStr),
			Direction:  ast.EdgeDirectionIncoming,
			Quantifier: yyS[yypt-1].item.(*ast.PatternQuantifier),
		}
	}
	case 244: {
		yyVAL.item = &ast.ReachabilityPathExpr{
			Labels:     yyS[yypt-2].item.([]model.CIStr),
			Direction:  ast.EdgeDirectionAnyDirected,
			Quantifier: yyS[yypt-1].item.(*ast.PatternQuantifier),
		}
	}
	case 245: {
		yyVAL.item = &ast.VertexPattern{Variable: yyS[yypt-1].item.(*ast.VariableSpec)}
	}
	case 246: {
		yyVAL.item = (*ast.VertexPattern)(nil)
	}
	case 248: {
		yyVAL.item = &ast.EdgePattern{
			Variable:  yyS[yypt-1].item.(*ast.VariableSpec),
			Direction: ast.EdgeDirectionOutgoing,
		}
	}
	case 249: {
		yyVAL.item = &ast.EdgePattern{Direction: ast.EdgeDirectionOutgoing}
	}
	case 250: {
		yyVAL.item = &ast.EdgePattern{
			Variable:  yyS[yypt-1].item.(*ast.VariableSpec),
			Direction: ast.EdgeDirectionIncoming,
		}
	}
	case 251: {
		yyVAL.item = &ast.EdgePattern{Direction: ast.EdgeDirectionIncoming}
	}
	case 252: {
		yyVAL.item = &ast.EdgePattern{
			Variable:  yyS[yypt-1].item.(*ast.VariableSpec),
			Direction: ast.EdgeDirectionAnyDirected,
		}
	}
	case 253: {
		yyVAL.item = &ast.EdgePattern{Direction: ast.EdgeDirectionAnyDirected}
	}
	case 254: {
		v := &ast.VariableSpec{
			Name:   yyS[yypt-1].item.(model.CIStr),
			Labels: yyS[yypt-0].item.([]model.CIStr),
		}
		if v.Name.L == "" {
			v.Anonymous = true
		}
		yyVAL.item = v
	}
	case 255: {
		yyVAL.item = model.CIStr{}
	}
	case 256: {
		yyVAL.item = model.NewCIStr(yyS[yypt-0].ident)
	}
	case 257: {
		yyVAL.item = yyS[yypt-0].item.([]model.CIStr)
	}
	case 258: {
		yyVAL.item = []model.CIStr(nil)
	}
	case 266: {
		yyVAL.item = []model.CIStr{yyS[yypt-0].ident.(model.CIStr)}
	}
	case 267: {
		yyVAL.item = append(yyS[yypt-2].item.([]model.CIStr), yyS[yypt-0].ident.(model.CIStr))
	}
	case 268: {
		yyVAL.item = &ast.QuantifiedPathExpr{
			Edge:       yyS[yypt-1].item.(*ast.EdgePattern),
			Quantifier: yyS[yypt-0].item.(*ast.PatternQuantifier),
		}
	}
	case 269: {
		q := &ast.QuantifiedPathExpr{
			Edge:        yyS[yypt-5].item.(*ast.EdgePattern),
			Quantifier:  yyS[yypt-0].item.(*ast.PatternQuantifier),
			Source:      yyS[yypt-6].item.(*ast.VertexPattern),
			Destination: yyS[yypt-4].item.(*ast.VertexPattern),
		}
		if yyS[yypt-3].item != nil {
			q.Where = yyS[yypt-3].item.(ast.ExprNode)
		}
		if yyS[yypt-2].item != nil {
			q.Cost = yyS[yypt-2].item.(ast.ExprNode)
		}
		yyVAL.item = q
	}
	case 270: {
		yyVAL.item = yyS[yypt-0].expr.(ast.ExprNode)
	}
	case 271: {
		yyVAL.item = nil
	}
	case 273: {
		yyVAL.item = &ast.PatternQuantifier{Tp: ast.PatternQuantifierZeroOrMore, M: 18446744073709551615}
	}
	case 274: {
		yyVAL.item = &ast.PatternQuantifier{Tp: ast.PatternQuantifierOneOrMore, N: 1, M: 18446744073709551615}
	}
	case 275: {
		yyVAL.item = &ast.PatternQuantifier{Tp: ast.PatternQuantifierOptional, N: 0, M: 1}
	}
	case 276: {
		yyVAL.item = &ast.PatternQuantifier{Tp: ast.PatternQuantifierExactlyN, N: yyS[yypt-1].item.(uint64), M: yyS[yypt-1].item.(uint64)}
	}
	case 277: {
		yyVAL.item = &ast.PatternQuantifier{Tp: ast.PatternQuantifierNOrMore, N: yyS[yypt-2].item.(uint64), M: 18446744073709551615}
	}
	case 278: {
		yyVAL.item = &ast.PatternQuantifier{Tp: ast.PatternQuantifierBetweenNAndM, N: yyS[yypt-3].item.(uint64), M: yyS[yypt-1].item.(uint64)}
	}
	case 279: {
		yyVAL.item = &ast.PatternQuantifier{Tp: ast.PatternQuantifierBetweenZeroAndM, N: 0, M: yyS[yypt-1].item.(uint64)}
	}
	case 280: {
		yyVAL.item = (*ast.PatternQuantifier)(nil)
	}
	case 284: {
		yyVAL.item = []*ast.PathPatternMacro{yyS[yypt-0].item.(*ast.PathPatternMacro)}
	}
	case 285: {
		yyVAL.item = append(yyS[yypt-1].item.([]*ast.PathPatternMacro), yyS[yypt-0].item.(*ast.PathPatternMacro))
	}
	case 286: {
		p := &ast.PathPatternMacro{
			Name: model.NewCIStr(yyS[yypt-3].ident),
			Path: yyS[yypt-1].item.(*ast.PathPattern),
		}
		if yyS[yypt-0].item != nil {
			p.Where = yyS[yypt-0].item.(ast.ExprNode)
		}
		yyVAL.item = p
	}
	case 295: {
		yyVAL.item = false
	}
	case 296: {
		yyVAL.item = true
	}
	case 297: {
		yyVAL.item = nil
	}
	case 313: {
		yyVAL.item = false
	}
	case 314: {
		yyVAL.item = true
	}
	case 315: {
		yyVAL.item = false
	}
	case 316: {
		yyVAL.item = true
	}
	case 322: {
		yyVAL.ident = model.NewCIStr(yyS[yypt-0].ident)
	}

	}

	if yyEx != nil && yyEx.Reduced(r, exState, &yyVAL) {
		return -1
	}
	goto yystack /* stack new state and value */
}



